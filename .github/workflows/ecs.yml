
name: ECS

on: [push]

jobs:
  Terraform-ECS-Deploy:
    name: Terraform-ECS-Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.ACCESS_KEY_ID}}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: vincent_311
        IMAGE_TAG: latest
      run: |
        ls -lrt
        docker build -t vincent_311 .
        docker tag vincent_311:latest 255945442255.dkr.ecr.ap-southeast-1.amazonaws.com/vincent_311:latest
        docker push 255945442255.dkr.ecr.ap-southeast-1.amazonaws.com/vincent_311:latest

    - name: task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ecs-task.json
        container-name: vincent_311
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ds-nodejs-svc
        cluster: vincent_311
        wait-for-service-stability: true












